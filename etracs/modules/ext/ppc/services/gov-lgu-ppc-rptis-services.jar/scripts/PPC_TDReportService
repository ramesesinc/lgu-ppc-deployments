import com.rameses.annotations.*
import com.rameses.common.*
import com.rameses.services.extended.*


public class PPC_TDReportService
{
	@ActiveDB('ppc_tdreport')
	def em 

	@Service("RPTUtil")
	def util


	@ProxyMethod 
	public def buildReport(faasid){
		def faas = em.findFaas([objid:faasid])
		if (!faas) throw new Exception('Record does not exist.')
		faas.td.rpu.taxable = faas.td.rpu.taxable == 1 
		faas.td.previousMarketValue = util.toDecimal(faas.td.previousMarketValue.replaceAll(',',''))
		faas.prevLandAV = util.toDecimal(faas.prevLandAV.replaceAll(',',''))
		faas.prevImprovementAV = util.toDecimal(faas.prevImprovementAV)

		if ('land' == faas.rputype) buildLands(faas)
		else if ('bldg' == faas.rputype) buildBuildings(faas)
		else if ('mach' == faas.rputype) buildMachineries(faas)
		else if ('planttree' == faas.rputype) buildPlantTrees(faas)
		else if ('misc' == faas.rputype) buildMisc(faas)
		buildEncumbranceInfo(faas)
		return faas
	}

	void buildLands(faas){
		faas.land1s = em.getAgriLands(faas)
		faas.land2s = em.getNonAgriLands(faas)
		faas.trees   = em.getPlantTrees(faas)
		faas.assessmentItems = em.getLandAssessmentItems(faas)
	}

	void buildBuildings(faas){
		faas.putAll(em.findBldgInfo(faas))
		faas.bldgItem.floorArea = em.findFloorArea(faas)?.area
		faas.bldgItem.description = em.findBldgDescription(faas)?.description 
		def materials = em.getMaterials(faas)
		if (materials){
			faas.bldgItem.constructionMaterials = materials.material.join(', ')
		}
		faas.assessmentItems = em.getBldgAssessmentItems(faas)
	}

	void buildMachineries(faas){
		faas.machinesMiscs = em.getMachines(faas)
		faas.assessmentItems = em.getMachAssessmentItems(faas)
	}

	void buildPlantTrees(faas){
		faas.trees = em.getPlantTreesRpu(faas)
		faas.assessmentItems = em.getPlantAssessmentItems(faas)
	}

	void buildMisc(faas){
		faas.machinesMiscs = em.getMiscItems(faas)
		faas.assessmentItems = em.getMiscAssessmentItems(faas)
	}

	void buildEncumbranceInfo(faas){
		def info = em.findEncumbranceInfo(faas)
		println 'info -> ' + info 
		if (info){
			faas.putAll(info)
		}
	}


}